import {
  _arrayLikeToArray,
  _unsupportedIterableToArray
} from "./chunk-V3J4NBMD.js";
import {
  require_classnames
} from "./chunk-CSDFVJ2I.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}

// node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}

// node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}

// node_modules/antd/es/skeleton/Paragraph.js
var React = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
var getWidth = (index, props) => {
  const {
    width,
    rows = 2
  } = props;
  if (Array.isArray(width)) {
    return width[index];
  }
  if (rows - 1 === index) {
    return width;
  }
  return void 0;
};
var Paragraph = (props) => {
  const {
    prefixCls,
    className,
    style,
    rows
  } = props;
  const rowList = _toConsumableArray(Array(rows)).map((_, index) => (
    // eslint-disable-next-line react/no-array-index-key
    React.createElement("li", {
      key: index,
      style: {
        width: getWidth(index, props)
      }
    })
  ));
  return React.createElement("ul", {
    className: (0, import_classnames.default)(prefixCls, className),
    style
  }, rowList);
};
var Paragraph_default = Paragraph;

export {
  _iterableToArray,
  _toConsumableArray,
  Paragraph_default
};
//# sourceMappingURL=chunk-CFS6HPM4.js.map
